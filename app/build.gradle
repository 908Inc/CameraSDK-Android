buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url 'http://maven.stickerpipe.com/artifactory/stickerfactory' }
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.stickerpipe.camerasdk"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 155
        versionName "1.5.5"
        buildConfigField("String", "API_KEY_PROD", "\"${rootProject.apiKeyProd}\"")
        buildConfigField("String", "API_KEY_DEBUG", "\"${rootProject.apiKeyDebug}\"")
        manifestPlaceholders = [fabricApiKey:"${rootProject.fabricApiKey}"]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'

    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.1.3'

    compile 'com.android.support:recyclerview-v7:25.3.0'
    compile "com.android.support:appcompat-v7:25.3.0"

    compile 'com.google.android.gms:play-services-vision:10.2.0'
    compile 'com.google.android.gms:play-services-analytics:10.2.0'

    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'me.everything:overscroll-decor-android:1.0.4'

    compile 'me.relex:circleindicator:1.2.1@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
}

String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)

retrolambda {
    jdk java8
    oldJdk java7
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods false
    incremental true
}

String getJavaVersion(Integer v) {
    def sout = new StringBuffer()
    def proc = "/usr/libexec/java_home -v 1.$v".execute()
    proc.consumeProcessOutput(sout, new StringBuffer())
    proc.waitForOrKill(1000)
    return sout.toString().replace("\n", "").replace("\r", "")
}
